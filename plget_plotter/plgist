#!/bin/bash

#separator
SEP="-----------------------------------"

ORIG_FILE=$1
TEMP_FILE=$(mktemp)
cp $ORIG_FILE $TEMP_FILE

# COMPLETE_TITLE, SUBTITLE, MAIN_LABEL
plgist_create_notations()
{
	local TITLE=$(plgist_get_title "$PLOT_DATA_FILE")

	local LTYPE=$(echo $TITLE | sed -n '/latency/p')
	[ -z "$LTYPE" ] || MAIN_LABEL="latency, us"

	local LTYPE=$(echo $TITLE | sed -n '/ipgap/p')
	[ -z "$LTYPE" ] || MAIN_LABEL="inter packet time (ipgap), us"

	local FILE_NAME=$(basename -- "$ORIG_FILE" | tr _ -)
	SUBTITLE=$(echo $TITLE | sed -n 's/\(^.*, us\)\( .*\)/\1/p')

	COMPLETE_TITLE=\
"$FILE_NAME\
\n$TITLE\
\nlink = 1000Mbps, \
frame = `sed -n '/frame\ size/s/\(^.*\): \(.\)/\2/p' "$PLOT_DATA_FILE"`B, \
rate = `sed -n '/RATE/s/\(^.*\)PPS = \(.\)/\2/p' "$PLOT_DATA_FILE"`pps, \
`sed -n '/RATE\ =/s/\(^.*\)= \(.*\),\(.*\)/\2/p' "$PLOT_DATA_FILE"`, \
\nmin = `sed -n '/min\ val/s/\(^.*\)= \(.\)/\2/p' "$PLOT_DATA_FILE"`, \
max = `sed -n '/max\ val/s/\(^.*\)= \(.\)/\2/p' "$PLOT_DATA_FILE"`, \
p-t-p = `sed -n '/peak-to-peak/s/\(^.*\)= \(.\)/\2/p' "$PLOT_DATA_FILE"`, \
mean-+RMS = `sed -n '/mean\ +-\ RMS/s/\(^.*\)= \(.\)/\2/p' "$PLOT_DATA_FILE"`"
}

plgist_hist() {
	local MAIN_LABEL=""
	local SUBTITLE=""
	local COMPLETE_TITLE=""

	plgist_create_notations

gnuplot -p <<GIST_EOF
reset

n=100 #number of intervals
mean="`sed -n '/mean\ +-\ RMS/s/\(^.*\)= \(.*\) +- \(.*$\)/\2/p' "$PLOT_DATA_FILE"`"
rms="`sed -n '/mean\ +-\ RMS/s/\(^.*\)= \(.*\) +- \(.*\) us$/\3/p' "$PLOT_DATA_FILE"`"
max=mean + rms
min=mean - rms

width=(max-min)/n #interval width
#function used to map a value to the intervals
hist(x,width)=width*floor(x/width)+width/2.0
set xrange [min:max]
set yrange [0:]

#to put an empty boundary around the data inside an autoscaled graph.
set offset graph 0.05,0.05,0.05,0.0
set xtics min,(max-min)/5,max
set boxwidth width*0.9
set style fill solid 0.5 #fillstyle
set tics out nomirror
set xlabel "$MAIN_LABEL"
set ylabel "frequency"

set title "$COMPLETE_TITLE"

set terminal qt 0
plot "< sed -e '0,/$SEP/ d' -e '/$SEP/,$ d' ". "$PLOT_DATA_FILE" \
u (hist(\$1,width)):(1.0) smooth freq w boxes lc rgb"black" title "$SUBTITLE"
GIST_EOF
}

plgist_plot()
{
	local MAIN_LABEL=""
	local SUBTITLE=""
	local CTITLE=""

	plgist_create_notations $@

	local FILE_NAME=$(basename -- "$ORIG_FILE" | tr _ -)
	CTITLE="$FILE_NAME"

	PLCMD=""
	COLOR=8
	for FILE in $@
	do
		local TITLE=$(plgist_get_title "$FILE")
		SUBTITLE=$(echo $TITLE | sed -n 's/\(^.*, us\)\( .*\)/\1/p')

		CTITLE+="\n$TITLE"
		CTITLE+="\nlink = 1000Mbps, "
		CTITLE+="frame = `sed -n '/frame\ size/s/\(^.*\): \(.\)/\2/p' "$FILE"`B, "
		CTITLE+="rate = `sed -n '/RATE/s/\(^.*\)PPS = \(.\)/\2/p' "$FILE"`pps, "
		CTITLE+="`sed -n '/RATE\ =/s/\(^.*\)= \(.*\),\(.*\)/\2/p' "$FILE"`, "
		CTITLE+="\nmin = `sed -n '/min\ val/s/\(^.*\)= \(.\)/\2/p' "$FILE"`, "
		CTITLE+="max = `sed -n '/max\ val/s/\(^.*\)= \(.\)/\2/p' "$FILE"`, "
		CTITLE+="p-t-p = `sed -n '/peak-to-peak/s/\(^.*\)= \(.\)/\2/p' "$FILE"`, "
		CTITLE+="mean-+RMS = `sed -n '/mean\ +-\ RMS/s/\(^.*\)= \(.\)/\2/p' "$FILE"`"

		PLCMD+="\"< sed -e '0,/$SEP/ d' -e '/$SEP/,$ d' \". \"$FILE\"\
		with points pointtype 7 lc $COLOR title \"$SUBTITLE\", "
		COLOR=$(($COLOR+15))
	done

gnuplot -p <<PLOT_EOF
reset

set ylabel "$MAIN_LABEL"
set xlabel 'frame number'

set key box
set grid

set title "$CTITLE"

set terminal qt 0

plot $PLCMD

PLOT_EOF
}

plgist_blocks_num() {
	# 2 separators has to be present
	local NUM=$(sed -n "/${SEP}/p" $TEMP_FILE | wc -l)
	return $(($NUM/2))
}

plgist_get_title() {
	sed "/${SEP}/,$ d" $1 | sed -n '$p'
}

plgist_get_tail() {
	echo
	sed -n "/frame\ size/,$ p" $1
}


plgist_blocks_num
BNUM=$?

# create plots income data files

PLOT_DATA_FILE_LIST=$(mktemp)
for ((i=0; i<$BNUM; i++))
do
	# get data
	PLOT_DATA_FILE=$(mktemp)

	plgist_get_title "$TEMP_FILE" >> $PLOT_DATA_FILE

	sed -e '0,/:\ packets\ / d'\
	-e '/^$/,$ d'\
	-e "/$SEP/,/$SEP/s/[[:space:]]\||$//g"\
	-e "/$SEP/,/$SEP/s/|/\n/g"\
	$TEMP_FILE >> $PLOT_DATA_FILE

	plgist_get_tail "$ORIG_FILE" >>  $PLOT_DATA_FILE

	plgist_hist
	plgist_plot "$PLOT_DATA_FILE"
	echo "$PLOT_DATA_FILE" >> $PLOT_DATA_FILE_LIST


	# remove printed part
	TEMP_FILE_2=$(mktemp)
	sed -e '0,/mean\ +-\ RMS/ d' $TEMP_FILE > $TEMP_FILE_2
	mv $TEMP_FILE_2 $TEMP_FILE
done

FILE_LIST=$(cat $PLOT_DATA_FILE_LIST)
plgist_plot $FILE_LIST

for FILE in $(cat $PLOT_DATA_FILE_LIST)
do
	rm $FILE
done

rm $TEMP_FILE
rm $PLOT_DATA_FILE_LIST
